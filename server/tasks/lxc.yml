---
# Install Home Assistant Supervised in a LXC container
- name: Setup Home Assistant Supervised in LXC container
  become: true
  block:
    - name: Ensure /etc/lxc directory exists
      file:
        path: /etc/lxc
        state: directory
        mode: '0755'
        owner: root
        group: root
      become: true
        
    - name: Check if lxc.conf exists
      ansible.builtin.stat:
        path: /etc/lxc/lxc.conf
      register: lxc_conf_file
              
    - name: Create lxc.conf file if it doesn't exist
      ansible.builtin.copy:
        dest: /etc/lxc/lxc.conf
        content: |
          # LXC configuration file
          # This file is managed by Ansible
        mode: '0644'
      when: not lxc_conf_file.stat.exists

    - name: Check if lxc.net.0.type is set in lxc.conf
      ansible.builtin.lineinfile:
        path: /etc/lxc/lxc.conf
        regexp: '^lxc\.net\.0\.type'
        line: 'lxc.net.0.type = veth'
        state: present
      check_mode: true
      register: lxc_net_type

    - name: Check if lxc.net.0.link is set in lxc.conf
      ansible.builtin.lineinfile:
        path: /etc/lxc/lxc.conf
        regexp: '^lxc\.net\.0\.link'
        line: 'lxc.net.0.link = {{ lxc.bridge.name }}-br'
        state: present
      check_mode: true
      register: lxc_net_link

    - name: Check if lxc.net.0.flags is set in lxc.conf
      ansible.builtin.lineinfile:
        path: /etc/lxc/lxc.conf
        regexp: '^lxc\.net\.0\.flags'
        line: 'lxc.net.0.flags = up'
        state: present
      check_mode: true
      register: lxc_net_flags

    - name: Check if lxc.lxcpath is set in lxc.conf
      ansible.builtin.lineinfile:
        path: /etc/lxc/lxc.conf
        regexp: '^lxc\.lxcpath'
        line: 'lxc.lxcpath = {{ lxc.path }}'
        state: present
      check_mode: true
      register: lxc_lxcpath

    - name: Add missing lxc.conf parameters
      ansible.builtin.lineinfile:
        path: /etc/lxc/lxc.conf
        line: "{{ item.line }}"
        regexp: "{{ item.regexp }}"
        state: present
      loop:
        - { regexp: '^lxc\.net\.0\.type', line: 'lxc.net.0.type = veth' }
        - { regexp: '^lxc\.net\.0\.link', line: 'lxc.net.0.link = {{ lxc.bridge.name }}-br' }
        - { regexp: '^lxc\.net\.0\.flags', line: 'lxc.net.0.flags = up' }
        - { regexp: '^lxc\.lxcpath', line: 'lxc.lxcpath = {{ lxc.path }}' }
      when: >
        item.regexp == '^lxc\.net\.0\.type' and lxc_net_type.changed or
        item.regexp == '^lxc\.net\.0\.link' and lxc_net_link.changed or
        item.regexp == '^lxc\.net\.0\.flags' and lxc_net_flags.changed or
        item.regexp == '^lxc\.lxcpath' and lxc_lxcpath.changed

    - name: Ensure LXC_NETWORK is set to {{ lxc.bridge.network }}
      lineinfile:
        path: /etc/default/lxc-net
        regexp: '^LXC_NETWORK='
        line: 'LXC_NETWORK="{{ lxc.bridge.network }}"'
        state: present
        backup: yes
      register: lxc_config_changed
      
    - name: Set LXC_ADDR to {{ lxc.bridge.ip }}
      lineinfile:
        path: /etc/default/lxc-net
        regexp: '^LXC_ADDR='
        line: 'LXC_ADDR="1{{ lxc.bridge.ip }}"'
        state: present
      register: lxc_addr_changed

    - name: Restart LXC networking service if configuration changed
      systemd:
        name: "lxc-net"
        state: restarted
      when: lxc_config_changed.changed or lxc_addr_changed.changed
      
    - name: Display bridge configuration
      debug:
        var: bridge_config.stdout_lines

    - name: Apply sysctl changes
      ansible.builtin.command: sysctl -p