---
# Install Home Assistant Supervised in a LXC container
- name: Setup Home Assistant Supervised in LXC container
  become: true
  block:
    - name: Check existing LXC containers
      ansible.builtin.command: lxc-ls
      register: lxc_containers
      changed_when: false

    - name: Check if Home Assistant LXC container is running
      ansible.builtin.command: "lxc-info -n {{ home_assistant.lxc_container_name }}"
      register: container_status
      changed_when: false
      failed_when: false

    - name: Set container running fact
      ansible.builtin.set_fact:
        is_container_running: "{{ 'State: RUNNING' in container_status.stdout }}"

    - name: Create Home Assistant LXC Container
      ansible.builtin.shell: >
        lxc-create -n {{ home_assistant.lxc_container_name }} -t download --
        --dist debian --release bookworm --arch amd64
      when: home_assistant.lxc_container_name not in lxc_containers.stdout_lines and not is_container_running

    - name: Configure LXC container network
      ansible.builtin.copy:
        dest: "{{ lxc.path }}/{{ home_assistant.lxc_container_name }}/config"
        owner: root
        group: root
        mode: "0644"
        content: |
          # Container specific configuration
          lxc.include = /usr/share/lxc/config/debian.common.conf
          lxc.rootfs.path = dir:{{ lxc.path }}/{{ home_assistant.lxc_container_name }}/rootfs
          lxc.uts.name = {{ home_assistant.lxc_container_name }}
          
          # Network configuration
          lxc.net.0.type = veth
          lxc.net.0.link = {{ lxc.bridge.name }}-br
          lxc.net.0.flags = up
          lxc.net.0.ipv4.address = {{ home_assistant.net.ip }}/16
          lxc.net.0.ipv4.gateway = {{ home_assistant.net.gateway }}
          
          # Console configuration
          lxc.tty.max = 0
          lxc.tty.dir = none
          lxc.console.path = none
          
          # Mount configuration
          lxc.mount.auto = proc:mixed sys:mixed cgroup:mixed
          
          # System configuration
          lxc.cap.drop = mac_admin mac_override sys_time sys_module sys_rawio
          
          # Ensure procfs is mounted correctly
          lxc.autodev = 1

    - name: Ensure kernel parameters are properly set
      ansible.builtin.sysctl:
        name: "{{ item.key }}"
        value: "{{ item.value }}"
        state: present
        reload: yes
      with_items:
        - { key: 'kernel.unprivileged_userns_clone', value: '1' }
        - { key: 'kernel.dmesg_restrict', value: '0' }
        - { key: 'net.ipv4.ip_forward', value: '1' }

    - name: Ensure network configuration directory exists
      ansible.builtin.file:
        path: "{{ lxc.path }}/{{ home_assistant.lxc_container_name }}/rootfs/etc/network"
        state: directory
        mode: '0755'
        owner: root
        group: root

    - name: Configure static IP in systemd network config
      become: true
      copy:
        dest: "{{ lxc.path }}/{{ home_assistant.lxc_container_name }}/rootfs/etc/systemd/network/20-static.network"
        content: |
          [Match]
          Name=eth0*

          [Network]
          Address={{ home_assistant.net.ip }}/16
          Gateway={{ home_assistant.net.gateway }}
          DNS={{ network.dns }}

    - name: Configure LXC container autostart
      ansible.builtin.template:
        src: templates/lxc-container.service.j2
        dest: "/etc/systemd/system/lxc-{{ home_assistant.lxc_container_name }}.service"
        owner: root
        group: root
        mode: '0644'
      register: service_file

    - name: Reload systemd configuration
      ansible.builtin.systemd:
        daemon_reload: yes
      when: service_file.changed

    - name: Enable and start LXC container service
      ansible.builtin.systemd:
        name: "lxc-{{ home_assistant.lxc_container_name }}.service"
        enabled: yes
        state: started

    - name: Install required dependencies in container
      ansible.builtin.shell: |
        lxc-attach -n {{ home_assistant.lxc_container_name }} -- bash -c "
        apt update &&
        apt install -y jq curl avahi-daemon apparmor udisks2 libglib2.0-bin network-manager dbus"
      register: install_result
      changed_when: "'0 upgraded, 0 newly installed' not in install_result.stdout"

    - name: Wait for container to be ready
      ansible.builtin.command: lxc-attach -n  {{ home_assistant.lxc_container_name }} -- systemctl is-system-running
      register: system_ready
      until: system_ready.rc == 0 or "degraded" in system_ready.stdout
      retries: 3
      delay: 2
      changed_when: false
      failed_when: false

    - name: Install Home Assistant supervised prerequisites
      ansible.builtin.shell: |
        lxc-attach -n {{ home_assistant.lxc_container_name }} -- bash -c '
          apt update &&
          apt install -y software-properties-common apparmor-utils apt-transport-https ca-certificates curl dbus jq network-manager systemd-journal-remote'
      register: prereq_result
      changed_when: prereq_result.rc == 0

    - name: Add Docker repository
      ansible.builtin.shell: |
        lxc-attach -n {{ home_assistant.lxc_container_name }} -- bash -c '
          curl -fsSL https://download.docker.com/linux/{{ home_assistant.dist }}/gpg | apt-key add - &&
          add-apt-repository -y "deb [arch=amd64] https://download.docker.com/linux/{{ home_assistant.dist }} {{ home_assistant.release }} stable"'
      register: docker_repo_result
      changed_when: docker_repo_result.rc == 0

    - name: Install Docker
      ansible.builtin.command: |
        lxc-attach -n {{ home_assistant.lxc_container_name }} -- bash -c '
          apt update &&
          apt install -y docker-ce docker-ce-cli containerd.io'
      register: docker_install_result
      changed_when: docker_install_result.rc == 0

    - name: Download and install Home Assistant supervised installer
      ansible.builtin.command: |
        lxc-attach -n {{ home_assistant.lxc_container_name }} -- bash -c '
          curl -Lo homeassistant-supervised.deb https://github.com/home-assistant/supervised-installer/releases/latest/download/homeassistant-supervised.deb
          apt install -y ./homeassistant-supervised.deb
          rm ./homeassistant-supervised.deb'
      register: ha_install_result
      changed_when: ha_install_result.rc == 0

    - name: Check Home Assistant installation
      ansible.builtin.command: >
        lxc-attach -n {{ home_assistant.lxc_container_name }} -- systemctl status hassos-supervisor
      register: ha_status
      changed_when: false
      failed_when: false

    - name: Home Assistant installation summary
      ansible.builtin.debug:
        msg: >
          Home Assistant Supervised installation completed.
          Container name: {{ home_assistant.lxc_container_name }}
          Container IP: {{ home_assistant.net.ip }}
          Access Home Assistant at http://{{ home_assistant.net.ip }}:8123
          Home Assistant Supervised installation completed.
          Container name: {{ home_assistant.lxc_container_name }}
          Container IP: {{ home_assistant.net.ip }}
          Access Home Assistant at http://{{ home_assistant.net.ip }}:8123
